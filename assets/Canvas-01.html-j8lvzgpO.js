import{_ as e,o as c,c as o,b as a}from"./app-zVI8MIRp.js";const m={},l=a("<p><code>canvas</code> 是 <em>html5</em> 的一个新标签，相当于一个画布，可以用来绘制丰富的图形，最终渲染在浏览器上。</p><p>但 <code>canvas</code> 标签本身不具备绘制图形的能力，配合 <em>JavaScript</em> 提供的 <em>Canvas API</em>，才能绘制图形、文本和图像，以及实现动画和交互。</p><p>支持 <em>2d</em> 绘图，也支持 <em>3d</em> 绘图。</p><p><code>canvas</code> 绘制的是一个<strong>位图</strong></p><ul><li>缩放会导致图像失真，所以需要注意缩放比例的控制</li><li>可以操作每一个点位的像素，进而实现高度自定义的图形绘制和动画效果</li><li>相当于 <code>img</code> 引入的图片，可以右键另存</li></ul><p><code>canvas</code> 绘制的内容不属于 <em>dom</em> 元素，通常比 <em>dom</em> 元素绘制的方式有更高的渲染能力。</p><p>但也存在一些问题，比如无法在浏览器查看器中查找，也无法支持鼠标监听，但可以实现类似的效果。</p><p><code>canvas</code> 应用领域：</p><ul><li>可视化图表（<em>echarts</em> 就是基于 <code>canvas</code> 实现）</li><li><em>h5</em> 游戏制作</li><li><em>banner</em> 广告</li></ul>",9),n=[l];function s(d,t){return c(),o("div",null,n)}const p=e(m,[["render",s],["__file","Canvas-01.html.vue"]]);export{p as default};
