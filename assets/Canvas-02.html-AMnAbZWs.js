import{_ as n,o as a,c as s,b as t}from"./app-zVI8MIRp.js";const e={},c=t(`<h2 id="_2-1-创建画布与画笔" tabindex="-1"><a class="header-anchor" href="#_2-1-创建画布与画笔" aria-hidden="true">#</a> 2.1. 创建画布与画笔</h2><p>提供一个 <code>canvas</code> 标签</p><p>有一个 <em>canvas</em> 对象</p><p>有一个 <em>context</em> 对象（<em>CanvasRenderingContext2D</em>）</p><blockquote><p>有两种创建方式：</p></blockquote><ul><li>直接定义 <code>canvas</code> 标签</li><li>利用 <em>js</em> 创建 <code>canvas</code> 标签（推荐，vscode 有更友好的提示）</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>c1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 浏览器版本过低，不支持 canvas，请升级或更换浏览器 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token comment">/* 
      方式1: 直接编写 canvas 标签
    */</span>
    <span class="token keyword">const</span> canvas1 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#c1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> context1 <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;2d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取2d绘图上下文</span>

    <span class="token comment">/* 
      方式2: 使用 js 创建 canvas 标签（推荐，vscode 有更友好的提示）
    */</span>
    <span class="token keyword">const</span> canvas2 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;canvas&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>canvas2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>canvas2<span class="token punctuation">.</span>getContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;浏览器版本过低，不支持 canvas，请升级或更换浏览器&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> context2 <span class="token operator">=</span> canvas2<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;2d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>canvas</code> 标签的版本检查</p></blockquote><ul><li>绝大多数的浏览器都支持 <code>canvas</code>。少数浏览器支持不佳（IE9-）</li><li>使用文本/图片替换 <code>canvas</code>、脚本检测（见上面的代码）</li></ul><h2 id="_2-2-画布区域特点" tabindex="-1"><a class="header-anchor" href="#_2-2-画布区域特点" aria-hidden="true">#</a> 2.2. 画布区域特点</h2><ul><li><code>canvas</code> 是一个行内元素，和 <code>img</code> 类似。<code>canvas</code> 是绘制出一个图片，<code>img</code> 是引入一个图片，最终的显示效果一样。</li><li><code>canvas</code> 可以使用 <em>width</em> 和 <em>height</em> 设置区域宽高。（默认 300 x 150）（行内元素可以设置宽高的特殊情况）</li><li><code>canvas</code> 也可以使用 <em>style</em> 样式设置宽高，但与 <em>width</em> 和 <em>height</em> 设置效果有所不同。</li></ul><h3 id="_2-2-1-坐标系" tabindex="-1"><a class="header-anchor" href="#_2-2-1-坐标系" aria-hidden="true">#</a> 2.2.1. 坐标系</h3><p>每一个画布都有一个坐标系统，画布的左上角为默认的（0, 0）原点。</p><h3 id="_2-2-2-画布区域" tabindex="-1"><a class="header-anchor" href="#_2-2-2-画布区域" aria-hidden="true">#</a> 2.2.2. 画布区域</h3><p>使用 <em>width</em> 和 <em>height</em> 属性控制的区域。这个区域有多大，其包含的坐标系就有多大。</p><p><code>&lt;canvas id=&quot;c1&quot; width=&quot;400&quot; height=&quot;400&quot;&gt;&lt;/canvas&gt;</code></p><p>表示我们可以看到一个 <em>400x400</em> 的坐标系。</p><h3 id="_2-2-3-放置区域" tabindex="-1"><a class="header-anchor" href="#_2-2-3-放置区域" aria-hidden="true">#</a> 2.2.3. 放置区域</h3><p>使用 <em>style</em> 样式控制区域大小，画布区域绘制的图形，最终会在放置区域种展示。</p><p>默认放置区域与画布区域相同。</p><p>放置区域如果比画布区域大/小，画布中的图形就会按比例放大/缩小（图像失真）。</p>`,21),p=[c];function o(l,i){return a(),s("div",null,p)}const d=n(e,[["render",o],["__file","Canvas-02.html.vue"]]);export{d as default};
